{"version":3,"sources":["webpack:///./src/lib/appStyle.css","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./src/lib/appStyle.css?ea11","webpack:///./src/lib/components/DashPdfComponents.react.js"],"names":["DashPdfComponents","enableAnnotationAPIs","includePDFAnnotations","annotManager","setState","annotationManager","viewSDKClient","ViewSDKClient","ready","then","state","previewFilePromise","previewFile","props","id","viewerConfig","apiKey","fileUrl","fileName","fileId","adobeViewer","getAnnotationManager","setAnnotationManager","highlightsArr","length","addAnnotations","result","console","log","error","customFlags","showCommentsPanel","downloadWithAnnotations","printWithAnnotations","setConfig","undefined","loadPdf","key","label","Component","defaultProps","propTypes","PropTypes","string","array","setProps","func"],"mappings":"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","file":"1f937fa-main-wps-hmr.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".category-badge.badge {\\n    font-size: 18px;\\n    width: 100%;\\n}\\n\\n.pdf-view-container {\\n    width: 100vw;\\n    height: 100vh;\\n    display: flex;\\n}\\n\\n.pdf-view {\\n    width: calc(100% - 400px);\\n}\\n\\n.annotations-container {\\n    border-left: 1px solid #e2e2e2;\\n    width: 400px;\\n}\\n\\nul {\\n    margin: 0 5px;\\n    padding: 0;\\n}\\n\\nli * {\\n    float: left;\\n}\\n\\nli, h3 {\\n    clear: both;\\n    list-style: none;\\n}\\n\\ninput, button {\\n    outline: none;\\n}\\n\\nbutton {\\n    background: none;\\n    border: 0px;\\n    color: #888;\\n    font-size: 15px;\\n    width: 60px;\\n    margin: 10px 0 0;\\n    font-family: Lato, sans-serif;\\n    cursor: pointer;\\n}\\n\\nbutton:hover {\\n    color: #333;\\n}\\n\\n/* Heading */\\n/* h3 {\\n    color: #333;\\n    font-weight: 700;\\n    font-size: 15px;\\n    border-bottom: 1px solid #333;\\n    padding: 15px 0 14px;\\n    margin: 0;\\n    text-align: center;\\n} */\\n\\ninput[type=\\\"text\\\"] {\\n    margin: 0;\\n    font-size: 18px;\\n    line-height: 18px;\\n    height: 18px;\\n    padding: 10px;\\n    border: 1px solid #ddd;\\n    background: #fff;\\n    border-radius: 6px;\\n    font-family: Lato, sans-serif;\\n    color: #888;\\n}\\n\\ninput[type=\\\"text\\\"]:focus {\\n    color: #333;\\n}\\n\\n/* Annotation list */\\nli {\\n    overflow: hidden;\\n    margin: 5px 0;\\n    padding: 10px 0;\\n    width: auto;\\n    border: 2px solid #3D85B0;\\n}\\n\\nli > input[type=\\\"checkbox\\\"] {\\n    margin: 0 10px;\\n    position: relative;\\n    top: 15px;\\n}\\n\\nli > label {\\n    font-size: 18px;\\n    /* line-height: 40px; */\\n    width: 237px;\\n    padding: 0 0 0 11px;\\n}\\n\\nli > input[type=\\\"text\\\"] {\\n    width: 226px;\\n}\\n\\nli > .delete:hover {\\n    color: #CF2323;\\n}\\n\\n.selected {\\n    border: 2px solid #3D85B0;\\n}\\n\\n.unselected {\\n    border: 2px solid #eee;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js!./appStyle.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"insertAt\":\"top\",\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js!./appStyle.css\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js!./appStyle.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import React, {Component} from 'react';\nimport ViewSDKClient from '../ViewSDKClient';\nimport PropTypes from 'prop-types';\nimport \"../appStyle.css\";\nimport CustomPdfActions from \"../CustomPdfActions\";\nimport { annotationExample } from '../annotationExample';\n\n/**\n * PDF componetn using the Adobe Embed API. Takes file url location and json annotations.\n */\nexport default class DashPdfComponents extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            annotationManager: undefined,\n            fileUrl: \"\",\n            highlightsArr: undefined\n        };\n    }\n\n    viewerConfig = {\n        /* Enable commenting APIs */\n        enableAnnotationAPIs: true,  /* Default value is false */\n        includePDFAnnotations: false // If true, annotations are saved to PDF buffer\n    };\n\n    setAnnotationManager = annotManager => {\n        this.setState({\n            annotationManager: annotManager\n        });\n    }\n\n    loadPdf = () => {\n\n        ////// load the embed API script\n        // const url = \"https://documentcloud.adobe.com/view-sdk/main.js\";\n        // const script = document.createElement(\"script\");\n        // script.src = url;\n        // script.async = true;\n        // document.body.appendChild(script);\n        \n        const viewSDKClient = new ViewSDKClient();\n        viewSDKClient.ready().then(() => {\n            /* Invoke the file preview and get the Promise object */\n            this.state.previewFilePromise = viewSDKClient.previewFile(\n                this.props.id, \n                this.viewerConfig, \n                this.props.apiKey, \n                this.props.fileUrl, \n                this.props.fileName, \n                this.props.fileId\n            );\n\n            /* Use the annotation manager interface to invoke the commenting APIs */ \n            this.state.previewFilePromise.then(adobeViewer => {\n                adobeViewer.getAnnotationManager().then(annotManager => {\n\n                    this.setAnnotationManager(annotManager);\n                    if (this.state.highlightsArr.length != 0) {\n                        annotManager.addAnnotations(this.state.highlightsArr)\n                        // annotManager.addAnnotationsInPDF(this.state.highlightsArr)            \n                            .then(result => {\n                                console.log(\"Success!!! Annotations added\", result);\n                            })\n                            .catch(error => {\n                                console.log(error);\n                            });\n                    }\n\n                    /* Set UI configurations */\n                    const customFlags = {\n                        // showToolbar: false,   /* Default value is true */\n                        // dockPageControls: false, /* Default value is true */\n                        showCommentsPanel: false,  /* Default value is true */\n                        downloadWithAnnotations: true,  /* Default value is false */\n                        printWithAnnotations: true,  /* Default value is false */\n                    };\n                    this.state.annotationManager.setConfig(customFlags);\n                });\n            });\n        });\n    }\n    \n    componentDidMount() {\n        this.loadPdf();\n    }\n\n    render() {\n\n        const {\n            key,\n            id,\n            label,\n            apiKey,\n            fileUrl,\n            fileName,\n            fileId,\n            highlightsArr\n        } = this.props;\n\n        this.state.fileUrl = fileUrl;\n        this.state.highlightsArr = highlightsArr; \n\n        return (\n            // <Provider theme={defaultTheme} colorScheme=\"light\">\n            <div className = \"pdf-view-container\">\n                <div id={id} className=\"pdf-view full-window-div\"></div>\n                {\n                    this.state.annotationManager &&\n                    <CustomPdfActions\n                        annotationManager={ this.state.annotationManager }\n                    />\n                }\n            </div>\n            // </Provider>\n        );\n\n    }\n\n    // render() {\n    //     const {id, label, setProps, value} = this.props;\n\n    //     return (\n    //         <div id={id}>\n                \n    //             <div id=\"pdf-div\" className=\"full-window-div\">HI!</div> \n\n    //             <h1>HI!</h1>\n    //             ExampleComponent: {label}&nbsp;\n    //             <input\n    //                 value={value}\n    //                 onChange={\n    //                     /*\n    //                      * Send the new value to the parent component.\n    //                      * setProps is a prop that is automatically supplied\n    //                      * by dash's front-end (\"dash-renderer\").\n    //                      * In a Dash app, this will update the component's\n    //                      * props and send the data back to the Python Dash\n    //                      * app server if a callback uses the modified prop as\n    //                      * Input or State.\n    //                      */\n    //                     e => setProps({ value: e.target.value })\n    //                 }\n    //             />\n    //         </div>\n\n    //     );\n    // }\n\n}\n\nDashPdfComponents.defaultProps = {};\n\nDashPdfComponents.propTypes = {\n\n    /**\n     * The ID used to identify this component in Dash callbacks.\n     */\n    key: PropTypes.string,\n\n    /**\n     * The ID used to identify this component in Dash callbacks.\n     */\n    id: PropTypes.string,\n\n    /**\n     * A label that will be printed when this component is rendered.\n     */\n    label: PropTypes.string,\n\n    /**\n     * Api key for authentication\n     */\n     apiKey: PropTypes.string,\n\n    /**\n     * URL to file that will be displayed\n     */\n     fileUrl: PropTypes.string,\n\n    /**\n     * file name\n     */\n     fileName: PropTypes.string,\n\n     /**\n     * unique file id\n     */\n    fileId: PropTypes.string,\n\n    /**\n     * Annotations that will appear as highlights\n     */\n     highlightsArr: PropTypes.array,\n\n    /**\n     * Dash-assigned callback that should be called to report property changes\n     * to Dash, to make them available for callbacks.\n     */\n    setProps: PropTypes.func\n};"],"sourceRoot":""}