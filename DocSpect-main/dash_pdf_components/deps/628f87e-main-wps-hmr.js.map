{"version":3,"sources":["webpack:///./src/lib/SidebarTable.js"],"names":["SidebarTable","documentTable","updatePdfRendered","showImpact","useState","isOpen","setIsOpen","handleTrigger","GetTable","key","Object","entries","map","value","highlightsArr","creator","isReviewed","impactFactor","tfcConfidence","isCorrect","revenue"],"mappings":"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","file":"628f87e-main-wps-hmr.js","sourcesContent":["import React, { useState } from \"react\";\nimport { ArrowsAngleExpand } from 'react-bootstrap-icons';\n// import \"./sidebar-styles.css\";\nimport { Cell, Column, Row, TableView, TableBody, TableHeader, View, defaultTheme } from '@adobe/react-spectrum'\n\n\nimport Drawer from 'react-modern-drawer'\nimport 'react-modern-drawer/dist/index.css'\n\n\nfunction SidebarTable({ documentTable, updatePdfRendered, showImpact }) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleTrigger = () => setIsOpen(!isOpen);\n\n  function GetTable() {\n\n    if (showImpact) {\n      return (\n          <TableView\n            colorScheme=\"lightest\"\n            aria-label=\"Example table with static contents\"\n            selectionMode=\"single\"\n            disallowEmptySelection\n            selectionStyle=\"highlight\"\n            onAction={(key) => updatePdfRendered(key)}\n            isQuiet\n            overflowMode=\"wrap\"\n          >\n            <TableHeader>\n              <Column minWidth={120}>Name</Column>\n              <Column align=\"end\">Impact</Column>\n              <Column>Confidence</Column>\n              <Column maxWidth={120}>Reviewed?</Column>\n              <Column maxWidth={80}>TFC</Column>\n              <Column align=\"end\">Revenue</Column>\n            </TableHeader>\n            <TableBody>\n              {Object.entries(documentTable).map(([key, value]) => {\n                return (\n                  <Row key={key} className={`${documentTable[key].highlightsArr[0].creator.isReviewed === true ? \"review-true\" : \"review-false\"}`}>\n                    <Cell>{key}</Cell>\n                    <Cell>{`${value.impactFactor}`}</Cell>\n                    <Cell>{`${value.tfcConfidence}`}</Cell>\n                    <Cell>{`${value.highlightsArr[0].creator.isReviewed === true ? \"yes\" : \"no\"}`}</Cell>\n                    <Cell>{`${value.highlightsArr[0].creator.isCorrect === true ? \"yes\" : \"no\"}`}</Cell>\n                    <Cell>{`${value.revenue}`}</Cell>\n                  </Row>\n                );\n              })}\n            </TableBody>\n          </TableView>\n      )\n\n    } else {\n      return (\n\n          <TableView\n            colorScheme=\"lightest\"\n            aria-label=\"Example table with static contents\"\n            selectionMode=\"single\"\n            disallowEmptySelection\n            selectionStyle=\"highlight\"\n            // onAction={(key) => console.log(`clicked item ${key}...`)}\n            onAction={(key) => updatePdfRendered(key)}\n            isQuiet\n            // density=\"compact\"\n            overflowMode=\"wrap\"\n          >\n            <TableHeader>\n              <Column minWidth={120}>Name</Column>\n              <Column maxWidth={120}>Reviewed?</Column>\n              <Column maxWidth={80}>TFC</Column>\n              <Column align=\"end\">Revenue</Column>\n            </TableHeader>\n            <TableBody>\n              {Object.entries(documentTable).map(([key, value]) => {\n                return (\n                  <Row key={key} className={`${documentTable[key].highlightsArr[0].creator.isReviewed === true ? \"review-true\" : \"review-false\"}`}>\n                    <Cell>{key}</Cell>\n                    <Cell>{`${value.highlightsArr[0].creator.isReviewed === true ? \"yes\" : \"no\"}`}</Cell>\n                    <Cell>{`${value.highlightsArr[0].creator.isCorrect === true ? \"yes\" : \"no\"}`}</Cell>\n                    <Cell>{`${value.revenue}`}</Cell>\n                  </Row>\n                );\n              })}\n            </TableBody>\n          </TableView>\n      )\n    }\n\n  }\n\n  return (\n    <>\n        <button onClick={handleTrigger}>Show Table</button>\n        <Drawer\n            open={isOpen}\n            onClose={handleTrigger}\n            direction='top'\n            className='top-bar'\n            enableOverlay={false}\n        >\n\n            <div>Hello World</div>\n\n        </Drawer>\n    </>\n  )\n\n\n\n}\n\nexport default SidebarTable;\n"],"sourceRoot":""}