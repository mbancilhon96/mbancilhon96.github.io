{"version":3,"sources":["webpack:///./src/lib/ClauseTFCAnnotationItem.js"],"names":["ClauseTFCAnnotationItem","e","stopPropagation","updateAnnotationReview","props","annotation","id","annotationId","status","setState","isReviewed","creator","review","state","inEditMode","selectedAnnotationId","annot_name","name","annot_review","itemOnClick","acceptButtonOnClick","deleteButtonOnClick","bodyValue","editInputOnChange","parseInt","target","selector","node","index","editButtonOnClick","AnnotationItem"],"mappings":"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","file":"aef8ca9-main-wps-hmr.js","sourcesContent":["import React, { Component } from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Stack from 'react-bootstrap/Stack';\nimport AnnotationItem from \"./AnnotationItem\";\nimport CheckmarkCircle from '@spectrum-icons/workflow/CheckmarkCircle';\nimport CloseCircle from '@spectrum-icons/workflow/CloseCircle';\n\nclass ClauseTFCAnnotationItem extends AnnotationItem {\n\n    constructor() {\n        super();\n        this.state = {\n            isReviewed: false\n        };\n    }\n\n    /* Bind deleteAnnotation to delete button. */\n    acceptButtonOnClick = e => {\n        e.stopPropagation();\n        this.updateAnnotationReview(this.props.annotation.id, true);\n    };\n\n    deleteButtonOnClick = e => {\n        e.stopPropagation();\n        this.updateAnnotationReview(this.props.annotation.id, false);\n    }\n\n    /* Update whether an annotation has been reviewed */\n    updateAnnotationReview = (annotationId, status) => {\n        this.setState({\n            isReviewed: status\n        })\n        this.props.annotation.creator.review = status;\n        this.props.updateAnnotationReview(annotationId, status);\n    };\n\n    render() {\n        const {\n            inEditMode,\n            isReviewed\n        } = this.state;\n\n        const {\n            annotation,\n            selectedAnnotationId\n        } = this.props;\n\n        let annot_name = annotation.creator.name;\n        let annot_review = annotation.creator.isReviewed;\n        \n        return (\n        \n            <li\n                id={ annotation.id }\n                className = { `${ selectedAnnotationId === annotation.id ? \"selected\" : \"unselected\" } ${ annot_name } ${ annot_review }`  }\n                onClick={ this.itemOnClick }\n            >\n                <Stack gap={2}>\n\n                    {!this.state.isReviewed && (\n                    <Container className=\"stack-review-container\">\n                        <Row>\n                            <Col>\n                                <button className=\"accept\" onClick={ this.acceptButtonOnClick }>\n                                    <span><CheckmarkCircle aria-label=\"Positive Checkmark\" color=\"positive\"/></span>\n                                </button>\n                            </Col>\n\n                            <Col>\n                                <button className=\"cancel\" onClick={ this.deleteButtonOnClick }>\n                                    <span><CloseCircle aria-label=\"Negative Close\" color=\"negative\"/></span>\n                                </button>\n                            </Col>\n                        </Row>\n                    </Container>\n                    )}\n\n                    <div className=\"clause-body\">\n                        {\n                            inEditMode ?\n                                <input type=\"text\" defaultValue={ annotation.bodyValue } onChange={ this.editInputOnChange }/> :\n                                <label>{ annotation.bodyValue }</label>\n                        }\n                    </div>\n                    <Row>\n                        <Col>\n                            <div className=\"page-number\">\n                                <small>Page {parseInt(annotation.target.selector.node.index) + 1}</small>\n                            </div>\n                        </Col>\n                        <Col>\n                            <small>\n                                <button className=\"edit\" onClick={this.editButtonOnClick}>{inEditMode ? \"Save\" : \"Edit\"}</button>\n                            </small>\n                        </Col>\n                    </Row>\n\n                </Stack>\n\n            </li>\n        );\n    }\n}\n\nexport default ClauseTFCAnnotationItem;"],"sourceRoot":""}