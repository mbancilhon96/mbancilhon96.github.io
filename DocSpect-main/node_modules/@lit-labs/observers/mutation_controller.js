class t{constructor(t,{target:s,config:i,callback:h,skipInitial:n}){this.t=!1,this.o=!1,this.callback=()=>!0,(this.i=t).addController(this),this.h=null===s||null!=s?s:this.i,this.l=i,this.t=null!=n?n:this.t,this.callback=null!=h?h:this.callback,window.MutationObserver?this.u=new MutationObserver((t=>{this.handleChanges(t),this.i.requestUpdate()})):console.warn("MutationController error: browser does not support MutationObserver.")}handleChanges(t){this.value=this.callback(t,this.u)}hostConnected(){this.h&&this.observe(this.h)}hostDisconnected(){this.disconnect()}async hostUpdated(){const t=this.u.takeRecords();(t.length||!this.t&&this.o)&&this.handleChanges(t),this.o=!1}observe(t){this.u.observe(t,this.l),this.o=!0,this.i.requestUpdate()}disconnect(){this.u.disconnect()}}export{t as MutationController};
//# sourceMappingURL=mutation_controller.js.map
