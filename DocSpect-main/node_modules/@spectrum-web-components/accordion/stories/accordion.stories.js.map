{"version":3,"file":"accordion.stories.js","sourceRoot":"","sources":["accordion.stories.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;EAUE;AAEF,OAAO,EAAE,IAAI,EAAkB,MAAM,+BAA+B,CAAC;AAErE,OAAO,oBAAoB,CAAC;AAC5B,OAAO,yBAAyB,CAAC;AACjC,OAAO,0CAA0C,CAAC;AAElD,eAAe;IACX,KAAK,EAAE,WAAW;IAClB,SAAS,EAAE,cAAc;IACzB,IAAI,EAAE;QACF,IAAI,EAAE,KAAK;KACd;IACD,QAAQ,EAAE;QACN,IAAI,EAAE;YACF,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE;YAC1C,WAAW,EAAE,4CAA4C;YACzD,KAAK,EAAE;gBACH,IAAI,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE;gBAC5B,YAAY,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE;aACnC;YACD,OAAO,EAAE;gBACL,IAAI,EAAE,SAAS;aAClB;SACJ;KACJ;CACJ,CAAC;AAQF,MAAM,QAAQ,GAAG,CACb,EAAE,aAAa,EAAE,QAAQ,EAAE,IAAI,KAAiB;IAC5C,aAAa,EAAE,KAAK;IACpB,QAAQ,EAAE,KAAK;IACf,IAAI,EAAE,KAAK;CACd,EACa,EAAE;IAChB,OAAO,IAAI,CAAA;;8BAEe,aAAa;;;6DAGkB,QAAQ;;;yDAGZ,IAAI;;;;;;;;;;;;;;;;;;KAkBxD,CAAC;AACN,CAAC,CAAC;AACF,MAAM,CAAC,MAAM,OAAO,GAAG,CAAC,IAAiB,EAAkB,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAE7E,MAAM,CAAC,MAAM,IAAI,GAAG,CAAC,IAAiB,EAAkB,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC1E,IAAI,CAAC,IAAI,GAAG;IACR,IAAI,EAAE,IAAI;IACV,aAAa,EAAE,KAAK;IACpB,QAAQ,EAAE,KAAK;CAClB,CAAC;AAEF,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,IAAiB,EAAkB,EAAE,CAC/D,QAAQ,CAAC,IAAI,CAAC,CAAC;AACnB,aAAa,CAAC,IAAI,GAAG;IACjB,aAAa,EAAE,IAAI;CACtB,CAAC;AAEF,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAC,IAAiB,EAAkB,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC9E,QAAQ,CAAC,IAAI,GAAG;IACZ,QAAQ,EAAE,IAAI;CACjB,CAAC","sourcesContent":["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { html, TemplateResult } from '@spectrum-web-components/base';\n\nimport '../sp-accordion.js';\nimport '../sp-accordion-item.js';\nimport '@spectrum-web-components/link/sp-link.js';\n\nexport default {\n    title: 'Accordion',\n    component: 'sp-accordion',\n    args: {\n        open: false,\n    },\n    argTypes: {\n        open: {\n            name: 'open',\n            type: { name: 'boolean', required: false },\n            description: 'Whether the second accordion item is open.',\n            table: {\n                type: { summary: 'boolean' },\n                defaultValue: { summary: false },\n            },\n            control: {\n                type: 'boolean',\n            },\n        },\n    },\n};\n\ntype Properties = {\n    allowMultiple?: boolean;\n    disabled?: boolean;\n    open?: boolean;\n};\n\nconst Template = (\n    { allowMultiple, disabled, open }: Properties = {\n        allowMultiple: false,\n        disabled: false,\n        open: false,\n    }\n): TemplateResult => {\n    return html`\n        <sp-accordion\n            ?allow-multiple=${allowMultiple}\n            style=\"color: var(--spectrum-global-color-gray-800)\"\n        >\n            <sp-accordion-item label=\"Heading 1\" ?disabled=${disabled}>\n                <div>Item 1</div>\n            </sp-accordion-item>\n            <sp-accordion-item label=\"Heading 2\" ?open=${open}>\n                Item 2\n            </sp-accordion-item>\n            <sp-accordion-item label=\"Heading 3\">\n                <p>\n                    This is content that has a\n                    <sp-link\n                        href=\"http://opensource.adobe.com/spectrum-web-components\"\n                        target=\"_blank\"\n                    >\n                        link back to Spectrum Web Components\n                    </sp-link>\n                    so that it is easy to test that \"Space\" and \"Enter\"\n                    interactions on focusable content does NOT toggle the\n                    Accordion Item.\n                </p>\n            </sp-accordion-item>\n        </sp-accordion>\n    `;\n};\nexport const Default = (args?: Properties): TemplateResult => Template(args);\n\nexport const Open = (args?: Properties): TemplateResult => Template(args);\nOpen.args = {\n    open: true,\n    allowMultiple: false,\n    disabled: false,\n};\n\nexport const AllowMultiple = (args?: Properties): TemplateResult =>\n    Template(args);\nAllowMultiple.args = {\n    allowMultiple: true,\n};\n\nexport const Disabled = (args?: Properties): TemplateResult => Template(args);\nDisabled.args = {\n    disabled: true,\n};\n"]}