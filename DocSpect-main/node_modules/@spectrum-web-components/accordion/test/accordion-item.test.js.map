{"version":3,"file":"accordion-item.test.js","sourceRoot":"","sources":["accordion-item.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { elementUpdated, expect, fixture, html } from '@open-wc/testing';\nimport { spy } from 'sinon';\n\nimport '../sp-accordion-item.js';\nimport { AccordionItem } from '../src/AccordionItem';\nimport { sendKeys } from '@web/test-runner-commands';\n\ndescribe('Accordion Item', () => {\n    it('can exist with no parent accessibly', async () => {\n        const el = await fixture<AccordionItem>(\n            html`\n                <sp-accordion-item label=\"item\">\n                    <div>Item 1</div>\n                </sp-accordion-item>\n            `\n        );\n\n        await elementUpdated(el);\n\n        await expect(el).to.be.accessible();\n    });\n    it('can be `[disabled]`', async () => {\n        const toggleSpy = spy();\n        const handleToggle = (): void => toggleSpy();\n        const el = await fixture<AccordionItem>(\n            html`\n                <sp-accordion-item\n                    disabled\n                    @sp-accordion-item-toggle=${handleToggle}\n                >\n                    <div>Item 1</div>\n                </sp-accordion-item>\n            `\n        );\n\n        const root = el.shadowRoot as ShadowRoot;\n        const button = root.querySelector('#header') as HTMLElement;\n\n        await elementUpdated(el);\n\n        expect(toggleSpy.callCount).to.equal(0);\n\n        button.click();\n\n        await elementUpdated(el);\n\n        expect(toggleSpy.callCount).to.equal(0);\n\n        el.disabled = false;\n        await elementUpdated(el);\n\n        button.click();\n\n        await elementUpdated(el);\n\n        expect(toggleSpy.callCount).to.equal(1);\n    });\n\n    it('dispatches toggle event on enter key', async () => {\n        let open = false;\n        const onAccordionToggle = (): void => {\n            open = true;\n        };\n        const el = await fixture<AccordionItem>(\n            html`\n                <sp-accordion-item\n                    disabled\n                    @sp-accordion-item-toggle=${onAccordionToggle}\n                >\n                    <div>Item 1</div>\n                </sp-accordion-item>\n            `\n        );\n\n        await elementUpdated(el);\n\n        expect(open).to.be.false;\n\n        el.focus();\n        await sendKeys({\n            press: 'Enter',\n        });\n\n        await elementUpdated(el);\n\n        expect(open).to.be.false;\n\n        el.disabled = false;\n        await elementUpdated(el);\n\n        el.focus();\n        await sendKeys({\n            press: 'Enter',\n        });\n\n        await elementUpdated(el);\n\n        expect(open).to.be.true;\n    });\n\n    it('dispatches toggle event on space key', async () => {\n        let open = false;\n        const onAccordionToggle = (): void => {\n            open = true;\n        };\n        const el = await fixture<AccordionItem>(\n            html`\n                <sp-accordion-item\n                    disabled\n                    @sp-accordion-item-toggle=${onAccordionToggle}\n                >\n                    <div>Item 1</div>\n                </sp-accordion-item>\n            `\n        );\n\n        await elementUpdated(el);\n\n        expect(open).to.be.false;\n\n        el.focus();\n        await sendKeys({\n            press: 'Space',\n        });\n\n        await elementUpdated(el);\n\n        expect(open).to.be.false;\n\n        el.disabled = false;\n        await elementUpdated(el);\n\n        el.focus();\n        await sendKeys({\n            press: 'Space',\n        });\n\n        await elementUpdated(el);\n\n        expect(open).to.be.true;\n    });\n\n    it('does not dispatch toggle events on key events in Item content', async () => {\n        let closed = false;\n        const onAccordionToggle = (): void => {\n            closed = true;\n        };\n        const el = await fixture<AccordionItem>(\n            html`\n                <sp-accordion-item\n                    open\n                    @sp-accordion-item-toggle=${onAccordionToggle}\n                >\n                    <div>\n                        <button>Test Button</button>\n                    </div>\n                </sp-accordion-item>\n            `\n        );\n\n        const button = el.querySelector('button') as HTMLButtonElement;\n        await elementUpdated(el);\n\n        expect(el.open).to.be.true;\n        expect(closed).to.be.false;\n\n        button.focus();\n        await sendKeys({\n            press: 'Space',\n        });\n\n        await elementUpdated(el);\n\n        expect(closed).to.be.false;\n\n        await elementUpdated(el);\n\n        await sendKeys({\n            press: 'Enter',\n        });\n\n        await elementUpdated(el);\n\n        expect(closed).to.be.false;\n        expect(el.open).to.be.true;\n    });\n});\n"]}