{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;EAUE;AACF,OAAO,EAAE,IAAI,EAAkB,MAAM,+BAA+B,CAAC;AACrE,OAAO,EAAE,SAAS,EAAE,MAAM,iDAAiD,CAAC;AAE5E,OAAO,iBAAiB,CAAC;AACzB,OAAO,0CAA0C,CAAC;AAClD,OAAO,+DAA+D,CAAC;AAGvE,MAAM,CAAC,MAAM,IAAI,GAAG;IAChB,QAAQ,EAAE,KAAK;IACf,OAAO,EAAE,KAAK;CACjB,CAAC;AAEF,MAAM,CAAC,MAAM,QAAQ,GAAG;IACpB,QAAQ,EAAE;QACN,IAAI,EAAE,UAAU;QAChB,IAAI,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE;QAC1C,WAAW,EACP,4DAA4D;QAChE,KAAK,EAAE;YACH,IAAI,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE;YAC5B,YAAY,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE;SACnC;QACD,OAAO,EAAE;YACL,IAAI,EAAE,SAAS;SAClB;KACJ;IACD,OAAO,EAAE;QACL,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE;QACzC,WAAW,EAAE,4CAA4C;QACzD,KAAK,EAAE;YACH,IAAI,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE;YAC3B,YAAY,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE;SACnC;QACD,OAAO,EAAE;YACL,IAAI,EAAE,cAAc;YACpB,OAAO,EAAE;gBACL,KAAK;gBACL,QAAQ;gBACR,SAAS;gBACT,WAAW;gBACX,UAAU;gBACV,gBAAgB;gBAChB,OAAO;gBACP,OAAO;aACV;SACJ;KACJ;IACD,SAAS,EAAE;QACP,IAAI,EAAE,WAAW;QACjB,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE;QACzC,WAAW,EAAE,8CAA8C;QAC3D,KAAK,EAAE;YACH,IAAI,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE;YAC3B,YAAY,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE;SACpC;QACD,OAAO,EAAE;YACL,IAAI,EAAE,cAAc;YACpB,OAAO,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC;SAC/B;KACJ;CACJ,CAAC;AAcF,MAAM,CAAC,MAAM,kBAAkB,GAC3B,CAAC,OAA2B,EAAE,EAAE,CAChC,CAAC,KAA2B,EAAkB,EAAE;IAC5C,MAAM,KAAK,GACP,OAAO,KAAK,OAAO;QACf,CAAC,CAAC,oBAAoB;QACtB,CAAC,CAAC,0CAA0C,CAAC;IACrD,OAAO,IAAI,CAAA;;;+DAG4C,KAAK;wCAC5B,KAAK;6BAChB,KAAK;;;;;kBAKhB,KAAK,EAAE;;SAEhB,CAAC;AACN,CAAC,CAAC;AAEN,MAAM,UAAU,YAAY,CAAC,UAAsB;IAC/C,IAAI,UAAU,CAAC,OAAO,EAAE;QACpB,OAAO,IAAI,CAAA;;2BAEQ,UAAU,CAAC,OAAO;6BAChB,UAAU,CAAC,SAAS;0BACvB,CAAC,CAAC,UAAU,CAAC,KAAK;4BAChB,CAAC,CAAC,UAAU,CAAC,QAAQ;uBAC1B,UAAU,CAAC,IAAI,IAAI,GAAG;uBACtB,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC;yBACxB,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC;2BAC1B,UAAU,CAAC,OAAO;;kBAE3B,UAAU,CAAC,OAAO,IAAI,UAAU;;SAEzC,CAAC;KACL;SAAM;QACH,OAAO,IAAI,CAAA;;0BAEO,CAAC,CAAC,UAAU,CAAC,KAAK;4BAChB,CAAC,CAAC,UAAU,CAAC,QAAQ;uBAC1B,UAAU,CAAC,IAAI;;kBAEpB,UAAU,CAAC,OAAO,IAAI,UAAU;;SAEzC,CAAC;KACL;AACL,CAAC;AAED,MAAM,UAAU,eAAe,CAAC,UAAsB;IAClD,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,UAAU,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;IACnE,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,UAAU,EAAE;QACvC,OAAO,EAAE,IAAI,CAAA;;;SAGZ;KACJ,CAAC,CAAC;IACH,OAAO,IAAI,CAAA;UACL,YAAY,CAAC,UAAU,CAAC,IAAI,YAAY,CAAC,QAAQ,CAAC;UAClD,YAAY,CAAC,IAAI,CAAC;KACvB,CAAC;AACN,CAAC;AAED,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAI,CAAA;;;;;;CAM3B,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,KAAiB,EAAkB,EAAE;IAChE,OAAO,IAAI,CAAA;;;;;;;cAOD,eAAe,iCACV,KAAK,KACR,OAAO,EAAE,IAAI,CAAA;;;iBAGZ,IACH;;;cAGA,eAAe,iCACV,KAAK,KACR,OAAO,EAAE,IAAI,CAAA;sBACP,QAAQ;iBACb,IACH;;KAET,CAAC;AACN,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,wBAAwB,GAAG,CACpC,OAAuB,EACvB,SAA2B,EACb,EAAE;IAChB,OAAO,IAAI,CAAA;;;;sBAIO,OAAO;wBACL,SAAS;;;;;;;;;;KAU5B,CAAC;AACN,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAAC,KAAiB,EAAkB,EAAE;IACtE,OAAO,IAAI,CAAA;;;;;;UAML,eAAe,CAAC,KAAK,CAAC;KAC3B,CAAC;AACN,CAAC,CAAC;AAEF,MAAM,IAAI,GAAG,kDAAkD,CAAC;AAEhE,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,KAAiB,EAAkB,EAAE,CAC5D,eAAe,iCACR,KAAK,KACR,IAAI,IACN,CAAC;AAEP,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAAC,KAAiB,EAAkB,EAAE,CACtE,eAAe,iCACR,KAAK,KACR,IAAI,EACJ,MAAM,EAAE,QAAQ,IAClB,CAAC","sourcesContent":["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { html, TemplateResult } from '@spectrum-web-components/base';\nimport { ifDefined } from '@spectrum-web-components/base/src/directives.js';\n\nimport '../sp-button.js';\nimport '@spectrum-web-components/icon/sp-icon.js';\nimport '@spectrum-web-components/icons-workflow/icons/sp-icon-help.js';\nimport { ButtonTreatments, ButtonVariants } from '../src/Button.js';\n\nexport const args = {\n    disabled: false,\n    variant: 'cta',\n};\n\nexport const argTypes = {\n    disabled: {\n        name: 'disabled',\n        type: { name: 'boolean', required: false },\n        description:\n            'Disable this control. It will not receive focus or events.',\n        table: {\n            type: { summary: 'boolean' },\n            defaultValue: { summary: false },\n        },\n        control: {\n            type: 'boolean',\n        },\n    },\n    variant: {\n        name: 'variant',\n        type: { name: 'string', required: false },\n        description: 'The visual variant to apply to the button.',\n        table: {\n            type: { summary: 'string' },\n            defaultValue: { summary: 'cta' },\n        },\n        control: {\n            type: 'inline-radio',\n            options: [\n                'cta',\n                'accent',\n                'primary',\n                'secondary',\n                'negative',\n                'overBackground',\n                'black',\n                'white',\n            ],\n        },\n    },\n    treatment: {\n        name: 'treatment',\n        type: { name: 'string', required: false },\n        description: 'The visual treatment to apply to the button.',\n        table: {\n            type: { summary: 'string' },\n            defaultValue: { summary: 'fill' },\n        },\n        control: {\n            type: 'inline-radio',\n            options: ['fill', 'outline'],\n        },\n    },\n};\n\nexport interface Properties {\n    variant?: ButtonVariants;\n    treatment?: ButtonTreatments;\n    quiet?: boolean;\n    content?: TemplateResult;\n    disabled?: boolean;\n    size?: 's' | 'm' | 'l' | 'xl';\n    href?: string;\n    target?: '_blank' | '_parent' | '_self' | '_top';\n    warning?: boolean;\n}\n\nexport const makeOverBackground =\n    (variant?: 'white' | 'black') =>\n    (story: () => TemplateResult): TemplateResult => {\n        const color =\n            variant === 'black'\n                ? 'rgb(181, 209, 211)'\n                : 'var(--spectrum-global-color-seafoam-600)';\n        return html`\n            <div\n                style=\"\n                    --mod-actionbutton-static-content-color: ${color};\n                    background-color: ${color};\n                    color: ${color};\n                    padding: var(--spectrum-global-dimension-size-175) var(--spectrum-global-dimension-size-250);\n                    display: inline-block;\n                \"\n            >\n                ${story()}\n            </div>\n        `;\n    };\n\nexport function renderButton(properties: Properties): TemplateResult {\n    if (properties.variant) {\n        return html`\n            <sp-button\n                variant=\"${properties.variant}\"\n                treatment=\"${properties.treatment}\"\n                ?quiet=\"${!!properties.quiet}\"\n                ?disabled=${!!properties.disabled}\n                size=${properties.size || 'm'}\n                href=${ifDefined(properties.href)}\n                target=${ifDefined(properties.target)}\n                ?warning=${properties.warning}\n            >\n                ${properties.content || 'Click Me'}\n            </sp-button>\n        `;\n    } else {\n        return html`\n            <sp-button\n                ?quiet=\"${!!properties.quiet}\"\n                ?disabled=${!!properties.disabled}\n                size=${properties.size}\n            >\n                ${properties.content || 'Click Me'}\n            </sp-button>\n        `;\n    }\n}\n\nexport function renderButtonSet(properties: Properties): TemplateResult {\n    const disabled = Object.assign({}, properties, { disabled: true });\n    const icon = Object.assign({}, properties, {\n        content: html`\n            <sp-icon-help slot=\"icon\"></sp-icon-help>\n            Click Me\n        `,\n    });\n    return html`\n        ${renderButton(properties)} ${renderButton(disabled)}\n        ${renderButton(icon)}\n    `;\n}\n\nexport const bellIcon = html`\n    <svg slot=\"icon\" viewBox=\"0 0 36 36\" focusable=\"false\" aria-hidden=\"true\">\n        <path\n            d=\"M16 36a4.407 4.407 0 0 0 4-4h-8a4.407 4.407 0 0 0 4 4zm9.143-24.615c0-3.437-3.206-4.891-7.143-5.268V3a1.079 1.079 0 0 0-1.143-1h-1.714A1.079 1.079 0 0 0 14 3v3.117c-3.937.377-7.143 1.831-7.143 5.268C6.857 26.8 2 26.111 2 28.154V30h28v-1.846C30 26 25.143 26.8 25.143 11.385z\"\n        ></path>\n    </svg>\n`;\n\nexport const renderWithIcon = (props: Properties): TemplateResult => {\n    return html`\n        <style>\n            .row {\n                padding: 10px;\n            }\n        </style>\n        <div class=\"row\">\n            ${renderButtonSet({\n                ...props,\n                content: html`\n                    <sp-icon-help slot=\"icon\"></sp-icon-help>\n                    Help\n                `,\n            })}\n        </div>\n        <div class=\"row\">\n            ${renderButtonSet({\n                ...props,\n                content: html`\n                    ${bellIcon} Custom SVG\n                `,\n            })}\n        </div>\n    `;\n};\n\nexport const renderIconSizeOverridden = (\n    variant: ButtonVariants,\n    treatment: ButtonTreatments\n): TemplateResult => {\n    return html`\n        <sp-button\n            label=\"Edit\"\n            size=\"xl\"\n            variant=${variant}\n            treatment=${treatment}\n        >\n            <sp-icon-help slot=\"icon\" size=\"s\">Testing</sp-icon-help>\n        </sp-button>\n        <h1>For testing purposes only</h1>\n        <p>\n            This is a test to ensure that sizing the icon will still work when\n            it's in the scope of a parent element. You shouldn't normally do\n            this as it deviates from the Spectrum design specification.\n        </p>\n    `;\n};\n\nexport const renderMinWidthButton = (props: Properties): TemplateResult => {\n    return html`\n        <style>\n            sp-button {\n                min-width: 300px;\n            }\n        </style>\n        ${renderButtonSet(props)}\n    `;\n};\n\nconst href = 'https://github.com/adobe/spectrum-web-components';\n\nexport const renderLink = (props: Properties): TemplateResult =>\n    renderButtonSet({\n        ...props,\n        href,\n    });\n\nexport const renderLinkWithTarget = (props: Properties): TemplateResult =>\n    renderButtonSet({\n        ...props,\n        href,\n        target: '_blank',\n    });\n"]}