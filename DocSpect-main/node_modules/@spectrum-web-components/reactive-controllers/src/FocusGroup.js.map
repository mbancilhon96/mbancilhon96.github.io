{"version":3,"file":"FocusGroup.js","sourceRoot":"","sources":["FocusGroup.ts"],"names":[],"mappings":"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","sourcesContent":["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport type { ReactiveController, ReactiveElement } from 'lit';\n\ntype DirectionTypes = 'horizontal' | 'vertical' | 'both' | 'grid';\nexport type FocusGroupConfig<T> = {\n    focusInIndex?: (_elements: T[]) => number;\n    direction?: DirectionTypes | (() => DirectionTypes);\n    elementEnterAction?: (el: T) => void;\n    elements: () => T[];\n    isFocusableElement?: (el: T) => boolean;\n    listenerScope?: HTMLElement | (() => HTMLElement);\n};\n\nexport class FocusGroupController<T extends HTMLElement>\n    implements ReactiveController\n{\n    protected cachedElements?: T[];\n\n    get currentIndex(): number {\n        if (this._currentIndex === -1) {\n            this._currentIndex = this.focusInIndex;\n        }\n        return this._currentIndex - this.offset;\n    }\n\n    set currentIndex(currentIndex) {\n        this._currentIndex = currentIndex + this.offset;\n    }\n\n    private _currentIndex = -1;\n\n    get direction(): DirectionTypes {\n        return this._direction();\n    }\n\n    _direction = (): DirectionTypes => 'both';\n\n    public directionLength = 5;\n\n    elementEnterAction = (_el: T): void => {\n        return;\n    };\n\n    get elements(): T[] {\n        if (!this.cachedElements) {\n            this.cachedElements = this._elements();\n        }\n        return this.cachedElements;\n    }\n\n    private _elements!: () => T[];\n\n    protected set focused(focused: boolean) {\n        if (focused === this.focused) return;\n        this._focused = focused;\n    }\n\n    protected get focused(): boolean {\n        return this._focused;\n    }\n\n    private _focused = false;\n\n    get focusInElement(): T {\n        return this.elements[this.focusInIndex];\n    }\n\n    get focusInIndex(): number {\n        return this._focusInIndex(this.elements);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _focusInIndex = (_elements: T[]): number => 0;\n\n    host: ReactiveElement;\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isFocusableElement = (_el: T): boolean => true;\n\n    isEventWithinListenerScope(event: Event): boolean {\n        if (this._listenerScope() === this.host) return true;\n        return event.composedPath().includes(this._listenerScope());\n    }\n\n    _listenerScope = (): HTMLElement => this.host;\n\n    // When elements are virtualized, the delta between the first element\n    // and the first rendered element.\n    offset = 0;\n\n    constructor(\n        host: ReactiveElement,\n        {\n            direction,\n            elementEnterAction,\n            elements,\n            focusInIndex,\n            isFocusableElement,\n            listenerScope,\n        }: FocusGroupConfig<T> = { elements: () => [] }\n    ) {\n        this.host = host;\n        this.host.addController(this);\n        this._elements = elements;\n        this.isFocusableElement = isFocusableElement || this.isFocusableElement;\n        // @TODO: abstract a method to simplify the conditional wrapping of the values as functions.\n        if (typeof direction === 'string') {\n            this._direction = () => direction;\n        } else if (typeof direction === 'function') {\n            this._direction = direction;\n        }\n        this.elementEnterAction = elementEnterAction || this.elementEnterAction;\n        if (typeof focusInIndex === 'number') {\n            this._focusInIndex = () => focusInIndex;\n        } else if (typeof focusInIndex === 'function') {\n            this._focusInIndex = focusInIndex;\n        }\n        if (typeof listenerScope === 'object') {\n            this._listenerScope = () => listenerScope;\n        } else if (typeof listenerScope === 'function') {\n            this._listenerScope = listenerScope;\n        }\n    }\n\n    update({ elements }: FocusGroupConfig<T> = { elements: () => [] }): void {\n        this.unmanage();\n        this._elements = elements;\n        this.clearElementCache();\n        this.manage();\n    }\n\n    focus(options?: FocusOptions): void {\n        let focusElement = this.elements[this.currentIndex];\n        if (!focusElement || !this.isFocusableElement(focusElement)) {\n            this.setCurrentIndexCircularly(1);\n            focusElement = this.elements[this.currentIndex];\n        }\n        if (focusElement && this.isFocusableElement(focusElement)) {\n            focusElement.focus(options);\n        }\n    }\n\n    clearElementCache(offset = 0): void {\n        delete this.cachedElements;\n        this.offset = offset;\n    }\n\n    setCurrentIndexCircularly(diff: number): void {\n        const { length } = this.elements;\n        let steps = length;\n        // start at a possibly not 0 index\n        let nextIndex = (length + this.currentIndex + diff) % length;\n        while (\n            // don't cycle the elements more than once\n            steps &&\n            this.elements[nextIndex] &&\n            !this.isFocusableElement(this.elements[nextIndex])\n        ) {\n            nextIndex = (length + nextIndex + diff) % length;\n            steps -= 1;\n        }\n        this.currentIndex = nextIndex;\n    }\n\n    hostContainsFocus(): void {\n        this.host.addEventListener('focusout', this.handleFocusout);\n        this.host.addEventListener('keydown', this.handleKeydown);\n        this.focused = true;\n    }\n\n    hostNoLongerContainsFocus(): void {\n        this.host.addEventListener('focusin', this.handleFocusin);\n        this.host.removeEventListener('focusout', this.handleFocusout);\n        this.host.removeEventListener('keydown', this.handleKeydown);\n        this.currentIndex = this.focusInIndex;\n        this.focused = false;\n    }\n\n    isRelatedTargetAnElement(event: FocusEvent): boolean {\n        const relatedTarget = event.relatedTarget as null | Element;\n        return !this.elements.includes(relatedTarget as T);\n    }\n\n    handleFocusin = (event: FocusEvent): void => {\n        if (!this.isEventWithinListenerScope(event)) return;\n        if (this.isRelatedTargetAnElement(event)) {\n            this.hostContainsFocus();\n        }\n        const path = event.composedPath() as T[];\n        let targetIndex = -1;\n        path.find((el) => {\n            targetIndex = this.elements.indexOf(el);\n            return targetIndex !== -1;\n        });\n        this.currentIndex = targetIndex > -1 ? targetIndex : this.currentIndex;\n    };\n\n    handleFocusout = (event: FocusEvent): void => {\n        if (this.isRelatedTargetAnElement(event)) {\n            this.hostNoLongerContainsFocus();\n        }\n    };\n\n    acceptsEventCode(code: string): boolean {\n        if (code === 'End' || code === 'Home') {\n            return true;\n        }\n        switch (this.direction) {\n            case 'horizontal':\n                return code === 'ArrowLeft' || code === 'ArrowRight';\n            case 'vertical':\n                return code === 'ArrowUp' || code === 'ArrowDown';\n            case 'both':\n            case 'grid':\n                return code.startsWith('Arrow');\n        }\n    }\n\n    handleKeydown = (event: KeyboardEvent): void => {\n        if (!this.acceptsEventCode(event.code) || event.defaultPrevented) {\n            return;\n        }\n        let diff = 0;\n        switch (event.code) {\n            case 'ArrowRight':\n                diff += 1;\n                break;\n            case 'ArrowDown':\n                diff += this.direction === 'grid' ? this.directionLength : 1;\n                break;\n            case 'ArrowLeft':\n                diff -= 1;\n                break;\n            case 'ArrowUp':\n                diff -= this.direction === 'grid' ? this.directionLength : 1;\n                break;\n            case 'End':\n                this.currentIndex = 0;\n                diff -= 1;\n                break;\n            case 'Home':\n                this.currentIndex = this.elements.length - 1;\n                diff += 1;\n                break;\n        }\n        event.preventDefault();\n        if (this.direction === 'grid' && this.currentIndex + diff < 0) {\n            this.currentIndex = 0;\n        } else if (\n            this.direction === 'grid' &&\n            this.currentIndex + diff > this.elements.length - 1\n        ) {\n            this.currentIndex = this.elements.length - 1;\n        } else {\n            this.setCurrentIndexCircularly(diff);\n        }\n        // To allow the `focusInIndex` to be calculated with the \"after\" state of the keyboard interaction\n        // do `elementEnterAction` _before_ focusing the next element.\n        this.elementEnterAction(this.elements[this.currentIndex]);\n        this.focus();\n    };\n\n    manage(): void {\n        this.addEventListeners();\n    }\n\n    unmanage(): void {\n        this.removeEventListeners();\n    }\n\n    addEventListeners(): void {\n        this.host.addEventListener('focusin', this.handleFocusin);\n    }\n\n    removeEventListeners(): void {\n        this.host.removeEventListener('focusin', this.handleFocusin);\n        this.host.removeEventListener('focusout', this.handleFocusout);\n        this.host.removeEventListener('keydown', this.handleKeydown);\n    }\n\n    hostConnected(): void {\n        this.addEventListeners();\n    }\n\n    hostDisconnected(): void {\n        this.removeEventListeners();\n    }\n}\n"]}